/* DDL(Data Definition Language) 
   : 관계형 데이터베이스 객체를 생성, 수정, 삭제
   : CREATE > ALTER, DROP
   SYN______
   [CREATE | ALTER | DROP] [OBJECT-TYPE] [OBJECT-NAME]
*/
/* ACCOUNT 
   SYN______생성
   CREATE USER [ACCOUNT-NAME] IDENTIFIED BY "PASSWORD"
   [DEFAULT TABLESPACE TBS-NAME]
   [TEMPORARY TABLESPACE TBS-NAME]
   [QUOTA [[INT][K|M|G] | UNLIMITED] ON [TBS-NAME]
   [ACCOUNT [UNLOCK | LOCK]];
*/

/* 계정 운영 프로세스
   TEAM : DBA 1SET, DEV 4SET
   DBA : HOONZZANG <-- SYS
     : CREATE SESSION : CONNECT ROLE : 
     : DBA ROLE
   DEV : ZZANG <-- DBA
     : CREATE SESSION : CONNECT ROLE
     : RESOURCE ROLE
*/
CREATE USER HOONZZANG
IDENTIFIED BY "1234" 
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;

GRANT CREATE SESSION TO HOONZZANG;
GRANT CONNECT TO HOONZZANG;
GRANT DBA TO HOONZZANG;

-- DBA
CREATE USER ZZANG 
IDENTIFIED BY "1234"
DEFAULT TABLESPACE USERS
QUOTA 20M ON USERS;

GRANT CREATE SESSION, RESOURCE TO ZZANG;


/* CONSTRAINT : 제약조건 : DML 구문에 적용 
                데이터의 무결성 보장
    1. NOT NULL
    2. UNIQUE  
    3. PRIMARY KEY : 하나의 테이블에 하나의 제약만 존재
                     레코드의 유일성을 확보하며 NULL을 허용 X
*/
CREATE TABLE TEST(
 USERID         NVARCHAR2(10),
 USERPASSWORD   NVARCHAR2(20),
 USERNAME       NVARCHAR2(5)
)TABLESPACE USERS;

ALTER TABLE TEST
MODIFY USERID NOT NULL;

ALTER TABLE TEST
ADD CONSTRAINT USERPASSWORD_UK  UNIQUE(USERPASSWORD);
ALTER TABLE TEST
DROP CONSTRAINT USERPASSWORD_UK;

ALTER TABLE TEST
ADD CONSTRAINT USERID_UK  UNIQUE(USERID);

-- INSERT
INSERT INTO TEST(USERID, USERPASSWORD, USERNAME) 
VALUES('HOONZZANG', '1234', '임훈');

INSERT INTO TEST(USERPASSWORD, USERNAME) 
VALUES( '1234', '임훈');

INSERT INTO TEST(USERID, USERPASSWORD, USERNAME) 
VALUES('HOONZZANG', NULL, '임훈');

-- ORACLE : NULL은 데이터 X --> UNIQUE제약이 있다 하더라도 NULL은 거르지 못함
  -- USERID --> NULL
  ALTER TABLE TEST
  MODIFY USERID NULL;
  
  INSERT INTO TEST(USERID, USERPASSWORD, USERNAME) 
  VALUES('HOONZZANG', '1234', '임훈');
  INSERT INTO TEST(USERID, USERPASSWORD, USERNAME) 
  VALUES('HOONZZANG', '123', '훈'); --> UNIQUE
  INSERT INTO TEST(USERID, USERPASSWORD, USERNAME) 
  VALUES(NULL, '1234', '임훈');
  INSERT INTO TEST(USERID, USERPASSWORD, USERNAME) 
  VALUES(NULL, '1234', '임훈');
SELECT * FROM ZZANG.TEST;
DELETE FROM ZZANG.TEST;
DROP TABLE TEST;
COMMIT;
ROLLBACK;

/* TODO PROJECT 
    1. MEMBERS TABLE  :: DBA
        --> ALTER :: DEV 1
    2. ACCESSHISTORY TABLE :: DBA
        --> ALTER :: DEV 2
    3. TODO :: DBA
        --> ALTER :: DEV 3
    4. CATEGORIES :: DBA
        --> ALTER :: DEV 4
        
    ANY TABLE :: SELECT --> DEV1~DEV4
    ANY TABLE :: INSERT --> DEV1~DEV2
    ANY TABLE :: UPDATE --> DEV3~DEV4
*/
-- HOONZZANG.MEMBERS
DROP TABLE HOONZZANG.MEMBERS;
CREATE TABLE HOONZZANG.MEMBERS(
  MR_ID     NVARCHAR2(20),
  MR_PWD    NVARCHAR2(20),
  MR_NAME   NVARCHAR2(5),
  MR_PHONE  NVARCHAR2(11)
)TABLESPACE USERS;
 
 -- PUBLIC SYNONYM :: DBA --> DML 사용시 적용 가능
 CREATE PUBLIC SYNONYM MR FOR HOONZZANG.MEMBERS;

 -- CONSTAINT :: ADD  :: OWNER
ALTER TABLE HOONZZANG.MEMBERS
ADD CONSTRAINT MR_ID_PK PRIMARY KEY(MR_ID)
ADD CONSTRAINT MR_PHONE_UK  UNIQUE(MR_PHONE);

 -- GRANT SYSTEM PRIVILEGE :: DBA
GRANT ALTER ANY TABLE TO ZZANG;
GRANT INSERT, UPDATE, SELECT ON HOONZZANG.MEMBERS TO ZZANG;
 -- CONSTRAINT :: DEV~
ALTER TABLE HOONZZANG.MEMBERS
MODIFY  MR_PWD  NOT NULL
MODIFY  MR_NAME NOT NULL;

ALTER TABLE HOONZZANG.MEMBERS
MODIFY  MR_PWD  NOT NULL
MODIFY  MR_NAME NOT NULL;

 -- DML
 INSERT INTO MR(MR_ID, MR_PWD, MR_NAME, MR_PHONE) 
    VALUES('HOON', '1234', '훈', '01056808050');
 UPDATE MR SET MR_PWD = '4321' WHERE MR_ID = 'HOON';
 COMMIT;
 SELECT * FROM MR;

/* ACCESSHISTORY :: AH */
-- TABLE :: DBA
CREATE TABLE ACCESSHISTORY(
  AH_MRID   NVARCHAR2(20),
  AH_DATE   DATE,
  AH_STATE  NUMBER(1,0)
)TABLESPACE USERS;
-- PUBLIC SYNONYM >> DBA
CREATE PUBLIC SYNONYM AH FOR HOONZZANG.ACCESSHISTORY;
-- CONSTRAINT :: ADD CONSTRAINT >> DBA
ALTER TABLE ACCESSHISTORY
ADD CONSTRAINT AH_MRID_DATE_PK PRIMARY KEY(AH_MRID, AH_DATE)
ADD CONSTRAINT AH_MRID_FK   FOREIGN KEY(AH_MRID) REFERENCES MEMBERS(MR_ID);

-- GRANT :: ALTER ANY TABLE >> DBA
GRANT ALTER ANY TABLE TO ZZANG;
GRANT INSERT, UPDATE, SELECT ON HOONZZANG.ACCESSHISTORY TO ZZANG;
-- CONSTRAINT :: MODIFY >> DEV
ALTER TABLE HOONZZANG.ACCESSHISTORY
MODIFY AH_DATE DEFAULT SYSDATE
MODIFY AH_STATE NOT NULL;

-- DML >> DEV
INSERT INTO AH(AH_MRID, AH_DATE, AH_STATE) 
VALUES('HOON', DEFAULT, 1);

UPDATE AH SET AH_STATE = -1 WHERE AH_MRID = 'HOON';
COMMIT;
SELECT * FROM AH;

/* CATEGORIES :: CA */
-- TABLE
CREATE TABLE CATEGORIES(
  CA_CODE   NCHAR(1),
  CA_NAME   NVARCHAR2(50)
)TABLESPACE USERS;
-- SYNONYM
CREATE PUBLIC SYNONYM CA FOR HOONZZANG.CATEGORIES;

-- CONSTRAINT :: ADD CONSTRAINT >> DBA
ALTER TABLE CATEGORIES
ADD CONSTRAINT CA_CODE_PK   PRIMARY KEY(CA_CODE);

-- GRANT
GRANT ALTER ANY TABLE TO ZZANG;
GRANT INSERT, UPDATE, SELECT ON HOONZZANG.CATEGORIES TO ZZANG;

-- MODIFY >> DEV
ALTER TABLE HOONZZANG.CATEGORIES
MODIFY CA_NAME  NOT NULL;

-- DML >> DEV
INSERT INTO CA(CA_CODE, CA_NAME) VALUES('B', '진행전');
INSERT INTO CA(CA_CODE, CA_NAME) VALUES('D', '진행중');
INSERT INTO CA(CA_CODE, CA_NAME) VALUES('C', '완료');
INSERT INTO CA(CA_CODE, CA_NAME) VALUES('P', '보류');
INSERT INTO CA(CA_CODE, CA_NAME) VALUES('A', '활성');
INSERT INTO CA(CA_CODE, CA_NAME) VALUES('I', '삭제');

UPDATE CA SET  CA_NAME = '비활성' WHERE CA_CODE = 'I';
COMMIT;
SELECT * FROM CA;


/* TODO TABLE :: TD */
CREATE TABLE TODO(
  TD_MRID       NVARCHAR2(20),
  TD_DATE       DATE,
  TD_EDATE      DATE,
  TD_CONTENT    NVARCHAR2(50),
  TD_FEEDBACK   NVARCHAR2(50),
  TD_STATE      NCHAR(1),
  TD_ACTIVATION NCHAR(1)
)TABLESPACE USERS;

-- SYNONYM >> DBA
CREATE PUBLIC SYNONYM TD FOR HOONZZANG.TODO;

-- CONSTRAINT :: ADD CONSTRAINT >> DBA
ALTER TABLE TODO
ADD CONSTRAINT TD_MRID_DATE_PK  PRIMARY KEY(TD_MRID, TD_DATE)
ADD CONSTRAINT TD_MRID_FK   FOREIGN KEY(TD_MRID) REFERENCES HOONZZANG.MEMBERS(MR_ID)
ADD CONSTRAINT TD_STATE_FK  FOREIGN KEY(TD_STATE) REFERENCES HOONZZANG.CATEGORIES(CA_CODE)
ADD CONSTRAINT TD_ACTIVATION_FK FOREIGN KEY(TD_ACTIVATION) REFERENCES HOONZZANG.CATEGORIES(CA_CODE);

-- GRANT :: ALTER ANY TABLE >> DBA
GRANT ALTER ANY TABLE TO ZZANG;
GRANT INSERT, UPDATE, SELECT ON HOONZZANG.TODO TO ZZANG;

-- CONSTRAINT :: MODIFY >> DEV
ALTER TABLE HOONZZANG.TODO
MODIFY TD_EDATE NOT NULL
MODIFY TD_CONTENT    NOT NULL
MODIFY TD_FEEDBACK   DEFAULT 'NONE'  NOT NULL
MODIFY TD_STATE      DEFAULT 'B'     NOT NULL 
MODIFY TD_ACTIVATION DEFAULT 'A'     NOT NULL;

-- DML
INSERT INTO TD(TD_MRID, TD_DATE, TD_EDATE, TD_CONTENT, TD_FEEDBACK, TD_STATE, TD_ACTIVATION) 
VALUES('HOON', TO_DATE('20221110120000', 'YYYYMMDDHH24MISS'), TO_DATE('20221110120000', 'YYYYMMDDHH24MISS'), '세차하기', DEFAULT, DEFAULT, DEFAULT);
INSERT INTO TD(TD_MRID, TD_DATE, TD_EDATE, TD_CONTENT, TD_FEEDBACK, TD_STATE, TD_ACTIVATION) 
VALUES('HOON', TO_DATE('20221111140000', 'YYYYMMDDHH24MISS'), TO_DATE('20221115235959', 'YYYYMMDDHH24MISS'), '독서', DEFAULT, DEFAULT, DEFAULT);

UPDATE TD SET TD_ACTIVATION = 'I' WHERE TD_MRID = 'HOON' AND TD_DATE = TO_DATE('20221111140000', 'YYYYMMDDHH24MISS');
COMMIT;
SELECT * FROM TD;

/* 정보 조회 */
SELECT * FROM USER_TABLES;
SELECT * FROM USER_TAB_COLS WHERE TABLE_NAME = 'TD';
SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'TD';
SELECT * FROM USER_TAB_PRIVS;
SELECT * FROM SESSION_PRIVS;
